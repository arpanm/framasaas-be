package com.framasaas.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ArticleWarrantyDetailsDocumentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArticleWarrantyDetailsDocumentAllPropertiesEquals(
        ArticleWarrantyDetailsDocument expected,
        ArticleWarrantyDetailsDocument actual
    ) {
        assertArticleWarrantyDetailsDocumentAutoGeneratedPropertiesEquals(expected, actual);
        assertArticleWarrantyDetailsDocumentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArticleWarrantyDetailsDocumentAllUpdatablePropertiesEquals(
        ArticleWarrantyDetailsDocument expected,
        ArticleWarrantyDetailsDocument actual
    ) {
        assertArticleWarrantyDetailsDocumentUpdatableFieldsEquals(expected, actual);
        assertArticleWarrantyDetailsDocumentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArticleWarrantyDetailsDocumentAutoGeneratedPropertiesEquals(
        ArticleWarrantyDetailsDocument expected,
        ArticleWarrantyDetailsDocument actual
    ) {
        assertThat(actual)
            .as("Verify ArticleWarrantyDetailsDocument auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArticleWarrantyDetailsDocumentUpdatableFieldsEquals(
        ArticleWarrantyDetailsDocument expected,
        ArticleWarrantyDetailsDocument actual
    ) {
        assertThat(actual)
            .as("Verify ArticleWarrantyDetailsDocument relevant properties")
            .satisfies(a -> assertThat(a.getDocumentPath()).as("check documentPath").isEqualTo(expected.getDocumentPath()))
            .satisfies(a -> assertThat(a.getIsValidated()).as("check isValidated").isEqualTo(expected.getIsValidated()))
            .satisfies(a -> assertThat(a.getValidatedBy()).as("check validatedBy").isEqualTo(expected.getValidatedBy()))
            .satisfies(a -> assertThat(a.getValidatedTime()).as("check validatedTime").isEqualTo(expected.getValidatedTime()))
            .satisfies(a -> assertThat(a.getCreateddBy()).as("check createddBy").isEqualTo(expected.getCreateddBy()))
            .satisfies(a -> assertThat(a.getCreatedTime()).as("check createdTime").isEqualTo(expected.getCreatedTime()))
            .satisfies(a -> assertThat(a.getUpdatedBy()).as("check updatedBy").isEqualTo(expected.getUpdatedBy()))
            .satisfies(a -> assertThat(a.getUpdatedTime()).as("check updatedTime").isEqualTo(expected.getUpdatedTime()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArticleWarrantyDetailsDocumentUpdatableRelationshipsEquals(
        ArticleWarrantyDetailsDocument expected,
        ArticleWarrantyDetailsDocument actual
    ) {
        assertThat(actual)
            .as("Verify ArticleWarrantyDetailsDocument relationships")
            .satisfies(a -> assertThat(a.getArticleWarranty()).as("check articleWarranty").isEqualTo(expected.getArticleWarranty()));
    }
}
