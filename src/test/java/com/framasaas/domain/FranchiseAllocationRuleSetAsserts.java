package com.framasaas.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FranchiseAllocationRuleSetAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFranchiseAllocationRuleSetAllPropertiesEquals(
        FranchiseAllocationRuleSet expected,
        FranchiseAllocationRuleSet actual
    ) {
        assertFranchiseAllocationRuleSetAutoGeneratedPropertiesEquals(expected, actual);
        assertFranchiseAllocationRuleSetAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFranchiseAllocationRuleSetAllUpdatablePropertiesEquals(
        FranchiseAllocationRuleSet expected,
        FranchiseAllocationRuleSet actual
    ) {
        assertFranchiseAllocationRuleSetUpdatableFieldsEquals(expected, actual);
        assertFranchiseAllocationRuleSetUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFranchiseAllocationRuleSetAutoGeneratedPropertiesEquals(
        FranchiseAllocationRuleSet expected,
        FranchiseAllocationRuleSet actual
    ) {
        assertThat(actual)
            .as("Verify FranchiseAllocationRuleSet auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFranchiseAllocationRuleSetUpdatableFieldsEquals(
        FranchiseAllocationRuleSet expected,
        FranchiseAllocationRuleSet actual
    ) {
        assertThat(actual)
            .as("Verify FranchiseAllocationRuleSet relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getSortType()).as("check sortType").isEqualTo(expected.getSortType()))
            .satisfies(a -> assertThat(a.getPriority()).as("check priority").isEqualTo(expected.getPriority()))
            .satisfies(a -> assertThat(a.getIsActive()).as("check isActive").isEqualTo(expected.getIsActive()))
            .satisfies(a -> assertThat(a.getCreateddBy()).as("check createddBy").isEqualTo(expected.getCreateddBy()))
            .satisfies(a -> assertThat(a.getCreatedTime()).as("check createdTime").isEqualTo(expected.getCreatedTime()))
            .satisfies(a -> assertThat(a.getUpdatedBy()).as("check updatedBy").isEqualTo(expected.getUpdatedBy()))
            .satisfies(a -> assertThat(a.getUpdatedTime()).as("check updatedTime").isEqualTo(expected.getUpdatedTime()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFranchiseAllocationRuleSetUpdatableRelationshipsEquals(
        FranchiseAllocationRuleSet expected,
        FranchiseAllocationRuleSet actual
    ) {
        // empty method
    }
}
