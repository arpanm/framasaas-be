package com.framasaas.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FranchiseAllocationRuleAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFranchiseAllocationRuleAllPropertiesEquals(FranchiseAllocationRule expected, FranchiseAllocationRule actual) {
        assertFranchiseAllocationRuleAutoGeneratedPropertiesEquals(expected, actual);
        assertFranchiseAllocationRuleAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFranchiseAllocationRuleAllUpdatablePropertiesEquals(
        FranchiseAllocationRule expected,
        FranchiseAllocationRule actual
    ) {
        assertFranchiseAllocationRuleUpdatableFieldsEquals(expected, actual);
        assertFranchiseAllocationRuleUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFranchiseAllocationRuleAutoGeneratedPropertiesEquals(
        FranchiseAllocationRule expected,
        FranchiseAllocationRule actual
    ) {
        assertThat(actual)
            .as("Verify FranchiseAllocationRule auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFranchiseAllocationRuleUpdatableFieldsEquals(
        FranchiseAllocationRule expected,
        FranchiseAllocationRule actual
    ) {
        assertThat(actual)
            .as("Verify FranchiseAllocationRule relevant properties")
            .satisfies(a -> assertThat(a.getRuleType()).as("check ruleType").isEqualTo(expected.getRuleType()))
            .satisfies(a -> assertThat(a.getJoinType()).as("check joinType").isEqualTo(expected.getJoinType()))
            .satisfies(a -> assertThat(a.getCreateddBy()).as("check createddBy").isEqualTo(expected.getCreateddBy()))
            .satisfies(a -> assertThat(a.getCreatedTime()).as("check createdTime").isEqualTo(expected.getCreatedTime()))
            .satisfies(a -> assertThat(a.getUpdatedBy()).as("check updatedBy").isEqualTo(expected.getUpdatedBy()))
            .satisfies(a -> assertThat(a.getUpdatedTime()).as("check updatedTime").isEqualTo(expected.getUpdatedTime()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFranchiseAllocationRuleUpdatableRelationshipsEquals(
        FranchiseAllocationRule expected,
        FranchiseAllocationRule actual
    ) {
        // empty method
    }
}
