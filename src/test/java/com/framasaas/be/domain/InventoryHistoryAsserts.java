package com.framasaas.be.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InventoryHistoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventoryHistoryAllPropertiesEquals(InventoryHistory expected, InventoryHistory actual) {
        assertInventoryHistoryAutoGeneratedPropertiesEquals(expected, actual);
        assertInventoryHistoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventoryHistoryAllUpdatablePropertiesEquals(InventoryHistory expected, InventoryHistory actual) {
        assertInventoryHistoryUpdatableFieldsEquals(expected, actual);
        assertInventoryHistoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventoryHistoryAutoGeneratedPropertiesEquals(InventoryHistory expected, InventoryHistory actual) {
        assertThat(actual)
            .as("Verify InventoryHistory auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventoryHistoryUpdatableFieldsEquals(InventoryHistory expected, InventoryHistory actual) {
        assertThat(actual)
            .as("Verify InventoryHistory relevant properties")
            .satisfies(a -> assertThat(a.getInventoryValue()).as("check inventoryValue").isEqualTo(expected.getInventoryValue()))
            .satisfies(a -> assertThat(a.getReason()).as("check reason").isEqualTo(expected.getReason()))
            .satisfies(a -> assertThat(a.getUpdatedBy()).as("check updatedBy").isEqualTo(expected.getUpdatedBy()))
            .satisfies(a -> assertThat(a.getUpdatedTime()).as("check updatedTime").isEqualTo(expected.getUpdatedTime()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventoryHistoryUpdatableRelationshipsEquals(InventoryHistory expected, InventoryHistory actual) {
        // empty method
    }
}
