package com.framasaas.be.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WarrantyMasterAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarrantyMasterAllPropertiesEquals(WarrantyMaster expected, WarrantyMaster actual) {
        assertWarrantyMasterAutoGeneratedPropertiesEquals(expected, actual);
        assertWarrantyMasterAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarrantyMasterAllUpdatablePropertiesEquals(WarrantyMaster expected, WarrantyMaster actual) {
        assertWarrantyMasterUpdatableFieldsEquals(expected, actual);
        assertWarrantyMasterUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarrantyMasterAutoGeneratedPropertiesEquals(WarrantyMaster expected, WarrantyMaster actual) {
        assertThat(actual)
            .as("Verify WarrantyMaster auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarrantyMasterUpdatableFieldsEquals(WarrantyMaster expected, WarrantyMaster actual) {
        assertThat(actual)
            .as("Verify WarrantyMaster relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a ->
                assertThat(a.getVendorWarrantyMasterId()).as("check vendorWarrantyMasterId").isEqualTo(expected.getVendorWarrantyMasterId())
            )
            .satisfies(a -> assertThat(a.getWarrantyType()).as("check warrantyType").isEqualTo(expected.getWarrantyType()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getPrice()).as("check price").isEqualTo(expected.getPrice()))
            .satisfies(a -> assertThat(a.getPeriodInMonths()).as("check periodInMonths").isEqualTo(expected.getPeriodInMonths()))
            .satisfies(a -> assertThat(a.getTaxRate()).as("check taxRate").isEqualTo(expected.getTaxRate()))
            .satisfies(a -> assertThat(a.getIsActive()).as("check isActive").isEqualTo(expected.getIsActive()))
            .satisfies(a -> assertThat(a.getCreateddBy()).as("check createddBy").isEqualTo(expected.getCreateddBy()))
            .satisfies(a -> assertThat(a.getCreatedTime()).as("check createdTime").isEqualTo(expected.getCreatedTime()))
            .satisfies(a -> assertThat(a.getUpdatedBy()).as("check updatedBy").isEqualTo(expected.getUpdatedBy()))
            .satisfies(a -> assertThat(a.getUpdatedTime()).as("check updatedTime").isEqualTo(expected.getUpdatedTime()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarrantyMasterUpdatableRelationshipsEquals(WarrantyMaster expected, WarrantyMaster actual) {
        assertThat(actual)
            .as("Verify WarrantyMaster relationships")
            .satisfies(a -> assertThat(a.getProduct()).as("check product").isEqualTo(expected.getProduct()));
    }
}
