package com.framasaas.be.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProductPriceHistoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductPriceHistoryAllPropertiesEquals(ProductPriceHistory expected, ProductPriceHistory actual) {
        assertProductPriceHistoryAutoGeneratedPropertiesEquals(expected, actual);
        assertProductPriceHistoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductPriceHistoryAllUpdatablePropertiesEquals(ProductPriceHistory expected, ProductPriceHistory actual) {
        assertProductPriceHistoryUpdatableFieldsEquals(expected, actual);
        assertProductPriceHistoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductPriceHistoryAutoGeneratedPropertiesEquals(ProductPriceHistory expected, ProductPriceHistory actual) {
        assertThat(actual)
            .as("Verify ProductPriceHistory auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductPriceHistoryUpdatableFieldsEquals(ProductPriceHistory expected, ProductPriceHistory actual) {
        assertThat(actual)
            .as("Verify ProductPriceHistory relevant properties")
            .satisfies(a -> assertThat(a.getPrice()).as("check price").isEqualTo(expected.getPrice()))
            .satisfies(a -> assertThat(a.getUpdatedBy()).as("check updatedBy").isEqualTo(expected.getUpdatedBy()))
            .satisfies(a -> assertThat(a.getUpdatedTime()).as("check updatedTime").isEqualTo(expected.getUpdatedTime()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductPriceHistoryUpdatableRelationshipsEquals(ProductPriceHistory expected, ProductPriceHistory actual) {
        assertThat(actual)
            .as("Verify ProductPriceHistory relationships")
            .satisfies(a -> assertThat(a.getFranchise()).as("check franchise").isEqualTo(expected.getFranchise()));
    }
}
