package com.framasaas.be.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LanguageMappingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLanguageMappingAllPropertiesEquals(LanguageMapping expected, LanguageMapping actual) {
        assertLanguageMappingAutoGeneratedPropertiesEquals(expected, actual);
        assertLanguageMappingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLanguageMappingAllUpdatablePropertiesEquals(LanguageMapping expected, LanguageMapping actual) {
        assertLanguageMappingUpdatableFieldsEquals(expected, actual);
        assertLanguageMappingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLanguageMappingAutoGeneratedPropertiesEquals(LanguageMapping expected, LanguageMapping actual) {
        assertThat(actual)
            .as("Verify LanguageMapping auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLanguageMappingUpdatableFieldsEquals(LanguageMapping expected, LanguageMapping actual) {
        assertThat(actual)
            .as("Verify LanguageMapping relevant properties")
            .satisfies(a -> assertThat(a.getLang()).as("check lang").isEqualTo(expected.getLang()))
            .satisfies(a -> assertThat(a.getCreateddBy()).as("check createddBy").isEqualTo(expected.getCreateddBy()))
            .satisfies(a -> assertThat(a.getCreatedTime()).as("check createdTime").isEqualTo(expected.getCreatedTime()))
            .satisfies(a -> assertThat(a.getUpdatedBy()).as("check updatedBy").isEqualTo(expected.getUpdatedBy()))
            .satisfies(a -> assertThat(a.getUpdatedTime()).as("check updatedTime").isEqualTo(expected.getUpdatedTime()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLanguageMappingUpdatableRelationshipsEquals(LanguageMapping expected, LanguageMapping actual) {
        assertThat(actual)
            .as("Verify LanguageMapping relationships")
            .satisfies(a -> assertThat(a.getFranchiseRule()).as("check franchiseRule").isEqualTo(expected.getFranchiseRule()))
            .satisfies(a ->
                assertThat(a.getFieldAgentSkillRule()).as("check fieldAgentSkillRule").isEqualTo(expected.getFieldAgentSkillRule())
            );
    }
}
