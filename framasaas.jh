
entity Franchise {
	franchiseName String required,
    owner String,
    email String pattern(/^[^@\s]+@[^@\s]+\.[^@\s]+$/) required,
    contact Long min(1000000000) max(9999999999) required,
    franchiseStatus FranchiseStatus,
    gstNumber String,
    registrationNumber String,
    performanceScore Float,
    performanceTag PerformanceTag,
    createddBy String required,
    createdTime LocalDateTime required,
    updatedBy String required,
    updatedTime LocalDateTime required
}

enum FranchiseStatus {
	PendingApproval,
    Active,
    Blocked
}

entity FranchiseStatusHistory {
	franchiseSatus FranchiseStatus required,
    updatedBy String required,
    updatedTime LocalDateTime required
}

relationship OneToMany {
	Franchise to FranchiseStatusHistory{franchise}
}

enum PerformanceTag {
	High,
    Medium,
    Low
}

entity FranchisePerformanceHistory {
	performanceScore Float,
    performanceTag PerformanceTag,
    updatedBy String,
    updatedTime LocalTime required,
    createddBy String required,
    createdTime LocalDateTime required,
    updatedBy String required,
    updatedTime LocalDateTime required
}

relationship OneToMany {
	Franchise to FranchisePerformanceHistory{franchise}
}

entity FranchiseBrandMapping {
	brand Brand required,
    createddBy String required,
    createdTime LocalDateTime required,
    updatedBy String required,
    updatedTime LocalDateTime required
}

enum Brand {
	Samsung,
    LG,
    Hitachi,
    BPL,
    Kelvinator,
    Sony,
    Other
}

relationship OneToMany {
	Franchise{brands} to FranchiseBrandMapping{franchise}
}

entity FranchiseCategoryMapping {
	serviceCategory ServiceCategory required,
    createddBy String required,
    createdTime LocalDateTime required,
    updatedBy String required,
    updatedTime LocalDateTime required
}

enum ServiceCategory {
	AC,
    TV,
    Refrigerator,
    WashingMachine,
    Phone,
    Tablet,
    Laptop,
  	Other
}

relationship OneToMany {
	Franchise{categories} to FranchiseCategoryMapping{franchise}
}

entity Address {
	address1 String required,
    address2 String,
    city String required,
    area String,
    district String,
    pincode Long required,
    state String,
    country String,
    createddBy String required,
    createdTime LocalDateTime required,
    updatedBy String required,
    updatedTime LocalDateTime required
}

entity LocationMapping {
	locationName String required,
    createddBy String required,
    createdTime LocalDateTime required,
    updatedBy String required,
    updatedTime LocalDateTime required
}

relationship ManyToOne {
	Address{location} to LocationMapping
}

relationship OneToOne {
	Franchise{address} to Address{franchise}
}

entity FranchiseDocument {
	documentName String required,
    documentType DocumentType required,
    documentFormat DocumentFormat required,
    documentSize Long,
    documentPath String required,
    createddBy String required,
    createdTime LocalDateTime required,
    updatedBy String required,
    updatedTime LocalDateTime required
}

enum DocumentType {
	AddressProof,
    RegistrationProof,
    CancelledCheque,
    AdditionalImages,
    Others
}

enum DocumentFormat {
	PdfFormat,
    JpgFormat,
    Other
}

relationship OneToMany {
	Franchise{documents} to FranchiseDocument{franchise}
}

entity FranchiseUser {
	userName String required,
    email String pattern(/^[^@\s]+@[^@\s]+\.[^@\s]+$/) required,
    contact Long min(1000000000) max(9999999999) required,
    userStatus FranchiseUserStatus,
    createddBy String required,
    createdTime LocalDateTime required,
    updatedBy String required,
    updatedTime LocalDateTime required
}

enum FranchiseUserStatus {
	PendingApproval,
    Active,
    Blocked
}

entity FranchiseUserStatusHistory {
	userSatus FranchiseUserStatus required,
    updatedBy String required,
    updatedTime LocalDateTime required
}

relationship OneToMany {
	FranchiseUser to FranchiseUserStatusHistory{franchiseUser}
}

relationship OneToMany {
	Franchise to FranchiseUser{franchise}
}

// Set pagination options
paginate all with infinite-scroll

// Set service options to all except few
service all with serviceImpl
