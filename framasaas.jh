
entity Franchise {
	franchiseName String required,
    owner String,
    email String pattern(/^[^@\s]+@[^@\s]+\.[^@\s]+$/) required,
    contact Long min(1000000000) max(9999999999) required,
    franchiseStatus FranchiseStatus,
    gstNumber String,
    registrationNumber String,
    performanceScore Float,
    performanceTag PerformanceTag,
    dailyMaxServiceLimit Long,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

enum FranchiseStatus {
	PendingApproval,
    Active,
    Blocked
}

entity FranchiseStatusHistory {
	franchiseSatus FranchiseStatus required,
    updatedBy String required,
    updatedTime Instant required
}

relationship OneToMany {
	Franchise to FranchiseStatusHistory{franchise}
}

enum PerformanceTag {
	High,
    Medium,
    Low
}

entity FranchisePerformanceHistory {
	performanceScore Float,
    performanceTag PerformanceTag,
    updatedBy String,
    updatedTime LocalTime required,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

relationship OneToMany {
	Franchise to FranchisePerformanceHistory{franchise}
}

entity Address {
	address1 String required,
    address2 String,
    city String required,
    area String,
    district String,
    pincode Long required,
    state String,
    country String,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

entity LocationMapping {
	locationName String required,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

relationship ManyToOne {
	Address{location} to LocationMapping
}

relationship OneToOne {
	Franchise{address} to Address{franchise}
}

entity SupportDocument {
	documentName String required,
    documentType DocumentType required,
    documentFormat DocumentFormat required,
    documentSize Long,
    documentPath String required,
    isValidated Boolean required,
    validatedBy String required,
    validatedTime Instant required,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

enum DocumentType {
	AddressProof,
    RegistrationProof,
    CancelledCheque,
    AdditionalImages,
    Others
}

enum DocumentFormat {
	PdfFormat,
    JpgFormat,
    Other
}

relationship OneToMany {
	Franchise to SupportDocument{franchise}
}

entity FranchiseUser {
	userName String required,
    email String pattern(/^[^@\s]+@[^@\s]+\.[^@\s]+$/) required,
    contact Long min(1000000000) max(9999999999) required,
    userStatus FranchiseUserStatus,
    userRole FranchiseUserRole,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

enum FranchiseUserStatus {
	PendingApproval,
    Active,
    Blocked
}

enum FranchiseUserRole {
	FranchiseAdmin,
    FinanceUser,
    ContactCenterAgent,
    FieldAgent,
    Other
}

entity FranchiseUserStatusHistory {
	userSatus FranchiseUserStatus required,
    updatedBy String required,
    updatedTime Instant required
}

relationship OneToMany {
	FranchiseUser to FranchiseUserStatusHistory{franchiseUser}
}

relationship OneToMany {
	Franchise to FranchiseUser{franchise}
}

entity Customer {
	email String pattern(/^[^@\s]+@[^@\s]+\.[^@\s]+$/),
    contact Long min(1000000000) max(9999999999) required,
    alternameContact Long min(1000000000) max(9999999999),
    language Language,
    userStatus UserStatus,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

enum UserStatus {
	Premium,
    Active,
    Blocked
}

enum Language {
	English,
    Hindi,
    Bengali,
    Marathi,
    Tamil,
    Telegu,
    Kanada
    Malayalam,
    Panjabi,
    Bojhpuri,
    Kashmiri
}

relationship OneToMany {
	Customer to Address{customer}
}

entity Brand {
	brandName String required,
    logoPath String,
    vendorBrandId String required,
    description String,
    isActive Boolean,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

entity Category {
	categoryName String required,
    imagePath String,
    vendorCategoryId String required,
    description String,
    isActive Boolean,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

entity Pincode {
	pincode String required,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}


entity LanguageMapping {
    lang Language required,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

entity FranchiseAllocationRuleSet {
	name String required,
    sortType FranchiseAllocationRuleSetSortType required,
    priority Long,
    isActive Boolean required,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
    
}

enum FranchiseAllocationRuleSetSortType {
	NPS,
    ROUNDROBIN
}

entity FranchiseAllocationRule {
	ruleType FranchiseAllocationRuleType required,
    joinType FranchiseAllocationRuleJoinType required,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

enum FranchiseAllocationRuleType {
	BRANDRULE,
    CATEGORYRULE,
    PINCODERULE,
    LOCATIONRULE,
    LANGUAGERULE
}

enum FranchiseAllocationRuleJoinType {
	ANDJOIN,
    ORJOIN
}

relationship OneToMany {
	FranchiseAllocationRule to Brand{franchiseRule}
}

relationship OneToMany {
	FranchiseAllocationRule to Category{franchiseRule}
}

relationship OneToMany {
	FranchiseAllocationRule to Pincode{franchiseRule}
}

relationship OneToMany {
	FranchiseAllocationRule to LocationMapping{franchiseRule}
}

relationship OneToMany {
    FranchiseAllocationRule to LanguageMapping{franchiseRule}
}

relationship OneToMany {
	FranchiseAllocationRuleSet to Franchise{ruleset}
}

entity FieldAgentSkillRuleSet {
    sortType FieldAgentSkillRuleSetSortType
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

enum FieldAgentSkillRuleSetSortType {
    NPS,
    ROUNDROBIN,
    PROXIMITY,
    EXPERIENCELEVEL
}

entity FieldAgentSkillRule {
    skillType FieldAgentSkillRuleType,
    joinType FieldAgentSkillRuleJoinType,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

relationship OneToMany {
    FieldAgentSkillRuleSet to FieldAgentSkillRule{fieldAgentSkillRuleSet}
}

enum FieldAgentSkillRuleType {
    BRANDSKILL,
    CATEGORYSKILL,
    PINCODESKILL,
    LOCATIONSKILL,
    LANGUAGESKILL
}

enum FieldAgentSkillRuleJoinType {
    ANDJOIN,
    ORJOIN
}

relationship OneToMany {
    FieldAgentSkillRule to Brand{fieldAgentSkillRule}
}

relationship OneToMany {
    FieldAgentSkillRule to Category{fieldAgentSkillRule}
}

relationship OneToMany {
    FieldAgentSkillRule to Pincode{fieldAgentSkillRule}
}

relationship OneToMany {
    FieldAgentSkillRule to LocationMapping{fieldAgentSkillRule}
}

relationship OneToMany {
    FieldAgentSkillRule to LanguageMapping{fieldAgentSkillRule}
}

relationship OneToMany {
    FieldAgentSkillRuleSet to FranchiseUser{skillRuleSet}
}

entity Product {
	productName String required,
    vendorProductId String required,
    description String,
    price Float required,
    tax Float required,
    franchiseCommission Float required,
    franchiseTax Float required,
    productType ProductType,
    isActive Boolean,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

enum ProductType {
	COMMERCE,
    SPARE,
    ACCESSORIES,
    OTHER
}

relationship OneToMany {
	Category to Product{category}
}

relationship OneToMany {
	Brand to Product{brand}
}

entity Hsn {
	hsnCD String required,
    description String,
    taxRate Float required,
    isActive Boolean,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

relationship OneToMany {
	Hsn to Product{hsn}
}

entity ProductPriceHistory {
	price Float,
    tax Float,
    franchiseCommission Float,
    franchiseTax Float,
    updateDescription String,
    updatedBy String required,
    updatedTime Instant required
}

relationship OneToMany {
	Product to ProductPriceHistory{product}
}

entity WarrantyMaster {
	name String required,
    vendorWarrantyMasterId String required,
    warrantyType WarrantyType required,
    description String,
    price Float required,
    tax Float required,
    franchiseCommission Float required,
    franchiseTax Float required,
    periodInMonths Long required,
    taxRate Float required,
    coverage String,
    exclusion String,
    isActive Boolean,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

relationship OneToMany {
	Product to WarrantyMaster{product}
}

relationship ManyToMany {
	WarrantyMaster{coveredSpare} to Product{coveredUnderWarranty}
}

entity WarrantyMasterPriceHistory {
	price Float,
    tax Float,
    franchiseCommission Float,
    franchiseTax Float,
    updatedBy String required,
    updatedTime Instant required
}

relationship OneToMany {
	WarrantyMaster to WarrantyMasterPriceHistory{warrantyMaster}
}

entity Article {
	serialNo String,
    vendorArticleId String,
    isValidated Boolean,
    purchaseDate LocalDate,
	puchasePrice Float,
    purchaseStore String,
	invoicePath String,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

relationship OneToMany {
	Product to Article{product}
}

relationship OneToMany {
	Customer to Article{customer}
}

relationship OneToMany {
	Article to SupportDocument{article}
}

entity ArticleWarrantyDetails {
	warrantyType WarrantyType,
    vendorArticleWarrantyId String,
    vendorWarrantyMasterId String,
    startDate LocalDate,
    endDate LocalDate,
    soldBy SoldBy,
    soldByUser String,
    soldDate LocalDate,
    isActive Boolean,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

enum WarrantyType {
	BRANDFREEWARRANTY,
    EXTENDEDPAIDWARRANTY,
    OTHER
}

enum SoldBy {
	FRANCHISE,
    ENGINEER,
    MOTHERCOMPANY
}

relationship OneToMany {
	Article to ArticleWarrantyDetails{article}
}

relationship OneToMany {
	WarrantyMaster to ArticleWarrantyDetails{warrantyMaster}
}

relationship OneToMany {
	ArticleWarrantyDetails to SupportDocument{articleWarranty}
}

entity ServiceOrderMaster {
	serviceOrderType ServiceOrderType,
    slaInHours Long,
	charge Float,
    tax Float,
    franchiseCommissionWithinSla Float,
    franchiseTaxWithinSlaTax Float,
    franchiseCommissionOutsideSla Float,
    franchiseTaxOutsideSlaTax Float,
    isActive Boolean,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

relationship OneToMany {
	Product to ServiceOrderMaster{product}
}

entity ServiceOrder {
	description String,
    orderType ServiceOrderType,
	orderStatus ServiceOrderStatus,
    inWarranty Boolean,
    isFree Boolean,
    isSpareNeeded Boolean,
    confirmedTime Instant,
    closedTime Instant,
    serviceCharge Float,
    tax Float,
    totalSpareCharges Float,
    totalSpareTax Float,
    totalCharges Float,
    totalPaymentDone Float,
    customerInvoicePath String,
    nps Float,
    priority Long,
    isActive Boolean,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

enum ServiceOrderStatus {
	CREATED,
    ASSIGNED,
    INPROGRESS,
    WAITINGFORSPARE,
    COMPLETED,
    CANCELED
}

enum ServiceOrderType {
	REPAIR,
    PERIODICMAINTENANCE,
    INSTALLATION,
    UNINSTALLATION,
    RETURNVERIFICATION
}

relationship OneToMany {
	Customer to ServiceOrder{customer}
}

relationship OneToMany {
	Article to ServiceOrder{article}
}

relationship OneToMany {
	Address to ServiceOrder{address}
}

relationship OneToMany {
	ServiceOrder to SupportDocument{serviceOrder}
}

entity ServiceOrderPayment {
	paymentLink String,
    paymentStatus PaymentStatus,
    mop ModeOfPayment,
    pgTxnId String,
    pgTxnResponse String,
    pgTxnResponseTime Instant,
    paymentInitiatedBy String,
    isActive Boolean,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

enum PaymentStatus {
	INITIATED,
    SUCCESS,
    FAILURE
}

enum ModeOfPayment {
	CASH,
    ONLINE
}

entity ServiceOrderFranchiseAssignment {
	serviceOrderAssignmentStatus ServiceOrderAssignmentStatus required,
    nps Long,
	isActive Boolean,
    assignedTime Instant,
    movedBackTime Instant,
    visitTime Instant,
    spareOrderTime Instant,
    spareDeliveryTime Instant,
    completedTime Instant,
    franchiseCommision Float,
    franchiseCommisionTax Float,
    franchiseInvoicePath String,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

enum ServiceOrderAssignmentStatus {
	ASSIGNED,
    MOVEDBACK,
    COMPLETEDINIT,
    COMPLETEDAPPROVED,
    CANCELATIONINIT,
    CANCELATIONAPPROVED
}

relationship OneToMany {
	ServiceOrder to ServiceOrderFranchiseAssignment{serviceOrder}
}

relationship OneToMany {
	Franchise to ServiceOrderFranchiseAssignment{franchise}
}

entity ServiceOrderFieldAgentAssignment {
	serviceOrderAssignmentStatus ServiceOrderAssignmentStatus required,
    nps Long,
	isActive Boolean,
    assignedTime Instant,
    movedBackTime Instant,
    visitTime Instant,
    spareOrderTime Instant,
    spareDeliveryTime Instant,
    completedTime Instant,
    completionOTP Long,
    cancellationOTP Long,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

entity ServiceOrderSpare {
	price Float,
    tax Float,
    totalCharge Float,
    franchiseCommision Float,
    franchiseCommisionTax Float,
    orderedFrom InventoryLocationType,
	spareStatus ServiceOrderSpareStatus,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

enum ServiceOrderSpareStatus {
	ADDED,
    PAYMENTINIT,
    PAYMENTSUCCESS,
    PAYMENTFAILED,
    SPAREORDERED,
    SPAREDELIVERED,
    INSTALLED
}

enum InventoryLocationType {
	ENGINEER,
    FRANCHISE,
    MOTHERCOMPANY
}

relationship OneToMany {
	ServiceOrder to ServiceOrderSpare{serviceOrder}
}

relationship OneToMany {
	Product to ServiceOrderSpare{product}
}


entity InventoryLocation {
	name String,
    locationType InventoryLocationType,
    isActive Boolean,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

entity Inventory {
	inventoryValue Long required,
    isSellable Boolean,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

entity InventoryHistory {
	inventoryValue Long required,
    reason InventoryChangeReason required,
    updatedBy String required,
    updatedTime Instant required
}

enum InventoryChangeReason {
	GRIN,
    RETURNINIT,
    RETURNAPPROVED,
    RETURNREJECTED,
    RETURNDISPATCHED,
    RETURNRECEIVED,
    ADJUSTMENTMISSING,
    ADJUSTMENTDAMAGED,
    ADJUSTMENTOTHERS,
    ORDERINIT,
    ORDERCONFIRMED,
    ORDERDISPATCHED,
    ORDERDELIVERED
}

relationship OneToMany {
	Product to Inventory{product}
}

relationship OneToMany {
	InventoryLocation to Inventory{location}
}

entity AdditionalAttribute {
	attributeName String required,
    attributeValue String required,
    attributeType AttributeType,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

enum AttributeType {
	ATTRSTRING,
    ATTRNUMBER,
    ATTRDECIMAL,
    ATTRSINGLESELCT,
    ATTRMULTISELECT,
    ATTRDATE,
    ATTRDATETIME,
    ATTRFILEPATH,
    ATTRIMAGEPATH
}

entity AdditionalAttributePossibleValue {
	possibleValue String,
    createddBy String required,
    createdTime Instant required,
    updatedBy String required,
    updatedTime Instant required
}

relationship OneToMany {
	AdditionalAttribute to AdditionalAttributePossibleValue{attribute}
}

relationship OneToMany {
	Franchise to AdditionalAttribute{franchise}
}

relationship OneToMany {
	FranchiseStatusHistory to AdditionalAttribute{franchiseStatus}
}

relationship OneToMany {
	FranchisePerformanceHistory to AdditionalAttribute{franchisePerformance}
}

relationship OneToMany {
	Brand to AdditionalAttribute{brand}
}

relationship OneToMany {
	Category to AdditionalAttribute{category}
}

relationship OneToMany {
	Address to AdditionalAttribute{address}
}

relationship OneToMany {
	LocationMapping to AdditionalAttribute{location}
}

relationship OneToMany {
	FranchiseUser to AdditionalAttribute{franchiseUser}
}

relationship OneToMany {
	Customer to AdditionalAttribute{customer}
}

relationship OneToMany {
	SupportDocument to AdditionalAttribute{document}
}

relationship OneToMany {
	Product to AdditionalAttribute{product}
}

relationship OneToMany {
	Hsn to AdditionalAttribute{hsn}
}

relationship OneToMany {
	ProductPriceHistory to AdditionalAttribute{priceHistory}
}

relationship OneToMany {
	WarrantyMaster to AdditionalAttribute{warrantyMaster}
}

relationship OneToMany {
	WarrantyMasterPriceHistory to AdditionalAttribute{warrantyMasterPriceHistory}
}

relationship OneToMany {
	Article to AdditionalAttribute{article}
}

relationship OneToMany {
	ArticleWarrantyDetails to AdditionalAttribute{articleWarranty}
}

relationship OneToMany {
	ServiceOrder to AdditionalAttribute{serviceOrder}
}

relationship OneToMany {
	ServiceOrderPayment to AdditionalAttribute{serviceOrderPayment}
}

relationship OneToMany {
	ServiceOrderFranchiseAssignment to AdditionalAttribute{serviceOrderFranchiseAssignment}
}

relationship OneToMany {
	ServiceOrderFieldAgentAssignment to AdditionalAttribute{serviceOrderFieldAgentAssignment}
}

relationship OneToMany {
	FranchiseAllocationRuleSet to AdditionalAttribute{franchiseAllocationRuleSet}
}

relationship OneToMany {
	FranchiseAllocationRule to AdditionalAttribute{franchiseAllocationRule}
}

relationship OneToMany {
	FieldAgentSkillRuleSet to AdditionalAttribute{fieldAgentSkillRuleSet}
}

relationship OneToMany {
	FieldAgentSkillRule to AdditionalAttribute{fieldAgentSkillRule}
}

relationship OneToMany {
	InventoryLocation to AdditionalAttribute{inventoryLocation}
}

relationship OneToMany {
	Inventory to AdditionalAttribute{inventory}
}

// Set pagination options
paginate all with infinite-scroll

// Set service options to all except few
service all with serviceImpl
